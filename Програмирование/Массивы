                                                    Объявление масива
Массив (array) - это совокупность переменных одного типа, к которым можно обратиться с помощью общего имени и индекса,
т.е. номера элемента в массиве. По сути это набор переменных, которые называются одним именем и имеют личные номера. 
Для объявления массива достаточно указать квадратные скобки после имени переменной с любым типом данных.

Указать компилятору размер массива можно двумя способами: явным числом в квадратных скобках, либо при объявлении записать в каждую ячейку значение,
тогда компилятор сам посчитает их количество.

*Размер массива, объявленного глобально, должен быть задан однозначно: конкретным числом, константой const или константой #define,
    так как массив будет существовать на всём протяжении работы программы и не может менять свой размер.
*Размер массива, объявленного локально, может быть задан переменной, так как такой массив создаётся во время выполнения программы и удаляется из
    памяти после закрывающей фигурной скобки.
*После указания последнего элемента массива можно ставить запятую, компилятор её проигнорирует (см. пример выше, массив myPins).
*Массив символов является строкой, о них мы поговорим в отдельном уроке.
                                                  Обращение к элементам
Обращение к элементу массива осуществляется точно так же, в квадратных скобках. Важно помнить, что отсчёт в программировании начинается с нуля,
и первый элемент массива имеет номер 0 (ноль).
                                                    Размер массива
Выше мы рассмотрели одномерные массивы, в которых элементы определяются просто порядковым номером (индексом).
Можно задавать и многомерные массивы, в которых адрес элемента будет определяться несколькими индексами.
Например двумерный массив, он же матрица, он же таблица, каждый элемент имеет номер строки и столбца. 
Задаётся такой массив следующим образом: тип имя[строки][столбцы]
Очень важно помнить, что при объявлении массива с вручную вписанными данными нужно обязательно указать размер количества ячеек в измерении 
на 1 меньше размерности массива (для двумерного - обязательно указать размер одного из измерений, для трёхмерного - два, и т.д.).
В рассмотренном выше двумерном массиве myMatrix элемент с адресом 0, 2 (строка 0 столбец 2) имеет значение 12.
С элементами массивов можно производить такие же действия, как с обычными переменными, т.е. всю математику, которую мы рассматривали в предыдущем уроке. 
Также не стоит забывать, что массивом может быть почти любой тип данных: численные переменные, структуры, классы, строки... 
Область видимости точно так же применяется к массивам, ведь массив - это по сути обычная переменная.
                                              Функции для работы с массивами
В C++ есть несколько полезных функций для работы с массивами:

*memset(buf, val, len) - заполнить байтовый массив buf длиной len значением val 
*memcmp(buf1, buf2, len) - сравнить массивы buf1 и buf2 на длину len. Вернёт 0 если массивы одинаковые
*memcpy(dest, src, len) - скопировать массив src в массив dest на длину len
